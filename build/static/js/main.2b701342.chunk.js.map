{"version":3,"sources":["Result.js","List.js","App.js","index.js"],"names":["Result","props","isNotMovie","List","createList","item","onClick","delete","key","style","textAlign","text","this","listItems","entries","map","className","Component","App","onChange","event","setState","term","target","value","movie","state","title","year","genre","plot","handleSubmit","preventDefault","url","fetch","then","response","json","data","Type","Title","Year","Genre","Plot","catch","e","console","log","newEntry","Date","now","nomList","length","toast","notify","deleteEntry","filteredEntries","filter","onSubmit","placeholder","Card","width","Body","Subtitle","Text","Button","Jumbotron","fluid","ReactDOM","render","document","getElementById"],"mappings":"8SAiBeA,MAdf,SAAgBC,GAGR,OAFeA,EAAMC,WAId,+EAGJ,MCcIC,G,kNAjBbC,WAAa,SAACC,GAEV,OAAO,wBAAIC,QAAS,kBAAM,EAAKC,OAAOF,EAAKG,MAAMC,MAAO,CAACC,UAAW,QAASF,IAAKH,EAAKG,KAAMH,EAAKM,O,qDAN/FH,GACLI,KAAKX,MAAMM,OAAOC,K,+BASlB,IACIK,EADaD,KAAKX,MAAMa,QACDC,IAAIH,KAAKR,YAEpC,OACE,wBAAIY,UAAU,WACTH,O,GAhBQI,c,gCCqIJC,G,oEA3Hb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAeRkB,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEC,KAAMF,EAAMG,OAAOC,QACnC,EAAKH,SAAS,CAAEnB,YAAY,IAC5B,EAAKmB,SAAS,CACZI,MAAM,2BACF,EAAKC,MAAMD,OADV,IAELE,MAAO,GACPC,KAAM,KACNC,MAAO,GACPC,KAAM,QAzBS,EA8BnBC,aAAe,SAACX,GACdA,EAAMY,iBACN,IACMC,EAAG,qCAAiC,EAAKP,MAAMJ,KAA5C,mBADO,WAEhBY,MAAMD,GACHE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACc,UAAdA,EAAKC,KAEP,EAAKlB,SAAS,CACdI,MAAM,2BACF,EAAKC,MAAMD,OADV,IAELE,MAAOW,GAAQA,EAAKE,MACpBZ,KAAMU,GAAQA,EAAKG,KACnBZ,MAAOS,GAAQA,EAAKI,MACpBZ,KAAMQ,GAAQA,EAAKK,SAIjB,EAAKtB,SAAS,CAACnB,WAAY,CAAC,EAAKwB,MAAMxB,YAAY,QAGxD0C,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAI,QAASF,OApDlB,EAwDnBvC,QAAU,SAACc,GACT0B,QAAQC,IAAI,cACZ,IAAIC,EAAW,CACbrC,KAAM,EAAKe,MAAMD,MAAME,MACvBnB,IAAKyC,KAAKC,OAGqB,IAA9B,EAAKxB,MAAMyB,QAAQC,OAEpB,EAAK/B,SAAS,CACZ8B,QAAQ,GAAD,mBAAM,EAAKzB,MAAMyB,SAAjB,CAA0BH,MAGnCK,IAAMC,OAAO,qCArEE,EA2EnBC,YAAc,SAAC/C,GACb,IAAIgD,EAAkB,EAAK9B,MAAMyB,QAAQM,QAAO,SAAUpD,GACxD,OAAQA,EAAKG,MAAQA,KAGvB,EAAKa,SAAS,CACZ8B,QAAUK,KA/EZ,EAAK9B,MAAQ,CACXJ,KAAM,GACNG,MAAO,CACL,MAAS,GACT,KAAQ,KACR,MAAS,GACT,KAAQ,IAEVvB,YAAY,EACZiD,QAAS,IAXM,E,qDAuFjB,OACE,yBAAKnC,UAAU,OACb,0EACA,0GACA,6BACA,0BAAM0C,SAAU9C,KAAKmB,cACnB,2BAAO4B,YAAY,oBAAoBnC,MAAOZ,KAAKc,MAAMJ,KAAMH,SAAUP,KAAKO,WAC9E,wCACA,wFAEF,kBAAC,EAAD,CAAQjB,WAAYU,KAAKc,MAAMxB,aAC/B,wBAAIO,MAAO,CAACC,UAAW,SAAvB,WACE,kBAACkD,EAAA,EAAD,CAAMnD,MAAO,CAAEoD,MAAO,UACpB,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKpB,MAAN,KAAa5B,KAAKc,MAAMD,MAAME,OAC9B,kBAACiC,EAAA,EAAKG,SAAN,CAAe/C,UAAU,mBAAmBJ,KAAKc,MAAMD,MAAMG,MAC7D,kBAACgC,EAAA,EAAKI,KAAN,KACCpD,KAAKc,MAAMD,MAAMK,KAAK,6BAAK,6BAC3BlB,KAAKc,MAAMD,MAAMI,OAElB,kBAACoC,EAAA,EAAD,CAAQ3D,QAASM,KAAKN,SAAtB,cAGN,6BACA,wBAAIG,MAAO,CAACC,UAAW,SAAvB,eACA,uBAAGD,MAAO,CAACC,UAAW,SAAtB,iEACA,kBAACwD,EAAA,EAAD,CAAWC,OAAK,GACd,4BACA,kBAAC,EAAD,CAAMrD,QAASF,KAAKc,MAAMyB,QAAS5C,OAAQK,KAAK2C,qB,GApHxCtC,cCNlBmD,IAASC,OAEL,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2b701342.chunk.js","sourcesContent":["import React from 'react';\n\n//to be displayed to user if term entered for search not a movie\nfunction Result(props) {\n    const isNotMovie = props.isNotMovie;\n   \n        if(isNotMovie)\n    {\n        return <p>I don't think that's a movie. Want to try again?</p>\n        \n    }\n    return null\n    \n}\n    \n  \n\nexport default Result;","import React, { Component }  from 'react';\nimport \"./List.css\";\n\nclass List extends Component {\n  delete(key){     \n    this.props.delete(key);  \n  }\n\n  createList = (item) => {\n\n      return <li onClick={() => this.delete(item.key)} style={{textAlign: 'left'}} key={item.key}>{item.text}</li>\n  }\n \n  render() {\n    var nomEntries = this.props.entries;\n    var listItems = nomEntries.map(this.createList);\n \n    return (\n      <ul className=\"theList\">\n          {listItems}\n      </ul>\n    );\n  }\n};\n\nexport default List;","\nimport React, { Component } from 'react';\nimport Result from './Result';\nimport List from './List';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport toast from 'toasted-notes';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'toasted-notes/src/styles.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: '',\n      movie: {\n        \"title\": '',\n        \"year\": null,\n        \"genre\": '',\n        \"plot\": ''\n      },\n      isNotMovie: false,\n      nomList: []\n    };\n  }\n\n  //resetting all state components when a new search occurs\n  onChange = (event) => {\n    this.setState({ term: event.target.value })\n    this.setState({ isNotMovie: false })\n    this.setState({\n      movie: \n      {...this.state.movie,\n      title: '',\n      year: null,\n      genre: '',\n      plot: ''\n      }});\n  }\n  \n  //connecting to the database only returning result if m == movie\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const api_key = 'de4c0dc';\n    const url = ` http://www.omdbapi.com/?t=${this.state.term}&apikey=${api_key}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(data =>  {\n        if (data.Type === \"movie\")\n        {\n          this.setState({\n          movie: \n          {...this.state.movie,\n          title: data && data.Title,\n          year: data && data.Year,\n          genre: data && data.Genre,\n          plot: data && data.Plot\n          }, \n        })\n        } else {\n            this.setState({isNotMovie: [this.state.isNotMovie, true]})\n          }\n    })\n      .catch(e => console.log('error', e));\n  }\n\n  //handling the nominate function. adding the nominated move to the nomiation list\n  onClick = (event) => {\n    console.log(\"I clicked!\");\n    var newEntry = {\n      text: this.state.movie.title,\n      key: Date.now() //key used for delete function, instead of index\n    };\n\n    if(this.state.nomList.length !== 5)\n    {\n      this.setState({\n        nomList: [...this.state.nomList, newEntry] \n      })\n    } else {\n      toast.notify(\"You can only have 5 Nominations!\");\n    }\n  }\n\n  //removing a nomination from nomination list. can only be up to five, which is \n  //checked when adding to the list\n  deleteEntry = (key) => {  \n    var filteredEntries = this.state.nomList.filter(function (item) {    \n      return (item.key !== key);  \n    }); \n\n    this.setState({    \n      nomList:  filteredEntries //replace with mutated array, so as to complete remove selected entry\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Welcome To the Shoppies Nomination Portal!</h1>\n        <p>(Brought to you by Anemme Bassey. Not bad for a first-time Reactor, I hope)</p>\n        <br/>\n        <form onSubmit={this.handleSubmit}>\n          <input placeholder=\"Enter Movie Title\" value={this.state.term} onChange={this.onChange} />\n          <button>Find</button>\n          <p>Please enter a movie to nominate for the Shoppies Award.</p>\n        </form>\n        <Result isNotMovie={this.state.isNotMovie}/>\n        <h3 style={{textAlign: 'left'}}>Results</h3>\n          <Card style={{ width: '18rem' }}>\n            <Card.Body>\n              <Card.Title>{this.state.movie.title}</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">{this.state.movie.year}</Card.Subtitle>\n              <Card.Text>\n              {this.state.movie.plot}<br/><br/>\n              {this.state.movie.genre}\n              </Card.Text>\n              <Button onClick={this.onClick}>Nominate</Button>\n            </Card.Body>\n          </Card>\n        <br/>\n        <h3 style={{textAlign: 'left'}}>Nominations</h3>\n        <p style={{textAlign: 'left'}}>If you would like to remove a nomination, please click on it.</p>\n        <Jumbotron fluid> \n          <ul>\n          <List entries={this.state.nomList} delete={this.deleteEntry}/>\n        </ul>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}